{"version":3,"sources":["Top.js","Activities.js","Profile.js","Hobby.js","App.js","serviceWorker.js","index.js"],"names":["Top","Col","className","href","target","rel","Component","Activities","Card","CardBody","CardTitle","CardText","Profile","age","myBirthday","year","month","date","birthDate","Date","today","day1","getFullYear","toString","padStart","getMonth","getDate","day2","Math","floor","Number","calcAge","Hobby","App","Fragment","to","Container","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fbf0802a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport default class Top extends Component {\r\n    render() {\r\n        return (\r\n            <Col>\r\n                <h1>初めまして！</h1>\r\n                \r\n                <div className=\"textarea\">\r\n                    <p>活動の記録・成果物をまとめたものです。</p>\r\n                    <p>まだ大した技術は持っていませんが、随時更新予定です。</p>\r\n\r\n                    <p> </p>\r\n                        各アカウント\r\n                        <ul>\r\n                            <li>\r\n                            <a href=\"https://github.com/on-da\" \r\n                               target=\"_blank\" rel=\"noreferrer noopener\"\r\n                            >Github</a></li>\r\n                            <li>\r\n                            <a>Gmail：xiangtailangentian@gmail.com</a></li>\r\n                        </ul>\r\n                    </div>\r\n                \r\n            </Col>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Col, Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\nexport default class Activities extends Component {\r\n    render() {\r\n        return (\r\n            <Col>\r\n                <h1>Activities</h1>\r\n\r\n                <Card className=\"textarea\">\r\n                    <CardBody>\r\n                        <CardTitle><a href=\"https://github.com/on-da/Portfolio.git\"\r\n                                      target=\"_blank\"\r\n                                      rel=\"noreferrer noopener\" \r\n                                      >On-da Portfolio</a></CardTitle>\r\n                        <CardText>このポートフォリオです。活動の記録をしていくために作成しました。</CardText>\r\n                        <CardText>フレームワークにReactを使って作成しました。SPA！react-router-dom！そういうのもあるのか！って感じです。</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n                <Card className=\"textarea\">\r\n                    <CardBody>\r\n                        <CardTitle><a href=\"https://github.com/on-da/calculator-js\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >電卓(HTML+CSS+javascript)</a></CardTitle>\r\n                        <CardText>JSを勉強してインプットが一通り終わったかな？と思い製作しました。\r\n                            evalを使わずに作ってみなよと知人に勧められて、少し難儀しました。</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n\r\n                <Card className=\"textarea\">\r\n                    <CardBody>\r\n                        <CardTitle><a href=\"https://github.com/on-da/ToDo-React\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >ToDoリスト(React.js+Redux Persist)</a></CardTitle>\r\n                        <CardText>ReactでTodoリストを作ってみて、リロードしても値が保持されるようにReduxも使って作ってみました。</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n\r\n                <Card className=\"textarea\">\r\n                    <CardBody>\r\n                        <CardTitle><a href=\"　\"\r\n                            target=\"_blank\"\r\n                            rel=\"noreferrer noopener\"\r\n                        >現在制作中</a></CardTitle>\r\n                        <CardText>現在制作中です。</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n            </Col>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport { Col } from 'reactstrap';\r\n\r\nexport default class Profile extends Component {\r\n    render(){\r\n        const age = calcAge();\r\n        return(\r\n            <Col>\r\n                <h1>Profile</h1>\r\n                <div className=\"textarea\">\r\n                    <p>名前 : 恩田　祥太朗</p>\r\n                    <p>{\"Age : \"+age}</p>\r\n                    <p>職務経歴 : 2015年に大学卒業後、大手化学メーカーの工場に作業員として約3年勤務\r\n                       その後退職し、土木関係の企業に1年間、総務部の事務員として働き退職。現在求職中。</p>\r\n                    <p>勉強中・勉強した : Javascript React.js Redux Next.js</p>\r\n                </div>\r\n            </Col>\r\n        );\r\n    }\r\n}\r\n\r\nfunction calcAge() {\r\n    const myBirthday = {\r\n        year: 1991,\r\n        month: 10,\r\n        date: 3\r\n    };\r\n\r\n    // 誕生日と今日の日付を引き算して算出\r\n    const birthDate = new Date(myBirthday.year, myBirthday.month - 1, myBirthday.date);\r\n    const today = new Date();\r\n    const day1 = today.getFullYear().toString().padStart(4, '0') + (today.getMonth() + 1).toString().padStart(2, '0') + today.getDate().toString().padStart(2, '0');\r\n    const day2 = birthDate.getFullYear().toString().padStart(4, '0') + (birthDate.getMonth() + 1).toString().padStart(2, '0') + birthDate.getDate().toString().padStart(2, '0');\r\n    const age = Math.floor((Number(day1) - Number(day2)) / 10000);\r\n\r\n    return age;\r\n}","import React, { Component } from 'react';\r\nimport { Col, Card, CardText, CardBody, CardTitle } from 'reactstrap';\r\n\r\n//趣味を書いていくコンポーネント\r\nexport default class Hobby extends Component {\r\n    render() {\r\n        return (\r\n            <Col >\r\n                <h1>趣味・嗜好</h1>\r\n\r\n                <Card className=\"textarea\">\r\n                    <CardBody>\r\n                        <CardTitle>ゲーム</CardTitle>\r\n                        <CardText>携帯ゲームはFateGrandOrder、ドールズフロントライン、崩壊3rdを最近はやってます。\r\n                            中国のアプリゲームの作り込みが凄いなあって感じる今日この頃です。\r\n                            コンシューマもその時に合わせて色々やったりしますがロボットゲームが結構好きだったり。\r\n                            アーマードコア新作…。今はデモンエクスマキナで欲求を満たしてます。</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n\r\n                <Card className=\"textarea\">\r\n                    <CardBody>\r\n                        <CardTitle>旅行、食べ歩き</CardTitle>\r\n                        <CardText>旅行してツアーとかじゃなくて気の向くまま名所を巡ったりするのが好きです。ぶらり旅的な。\r\n                            ご当地グルメみたいなのも食べるのも好きです。地元の人しか知らないマイナーな美味しい食べ物とか好きですね。\r\n                        </CardText>\r\n                    </CardBody>\r\n                </Card>\r\n\r\n            </Col>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\nimport { Container } from 'reactstrap';\nimport './App.css';\nimport { BrowserRouter as Router, Link, Route, Switch } from \"react-router-dom\";\nimport Top from './Top';\nimport Activities from './Activities';\nimport Profile from './Profile';\nimport Hobby from './Hobby';\n\nexport default class App extends Component {\n  render() {\n    return (\n      <Router>\n        <React.Fragment>\n\n          <div className=\"header d-flex flex-column flex-md-row align-items-center sticky-top p-3 px-md-4 mb-3\">\n            <h5 className=\"my-0 mr-md-auto font-weight-normal\">On-da Portfolio</h5>\n            <nav className=\"my-2 my-md-0 mr-md-3\">\n              <Link className=\"p-2 trans-green\" to=\"/my-portfolio\">Top</Link>\n              <Link className=\"p-2 trans-red\" to=\"/my-portfolio/activities\">Activities</Link>\n              <Link className=\"p-2 trans-yellow\" to=\"/my-portfolio/profile\">Profile</Link>\n              <Link className=\"p-2 trans-blue\" to=\"/my-portfolio/hobby\">Hobby</Link>\n            </nav>\n          </div>\n\n          <Container>\n            <div className=\"row\">\n\n              <Switch>\n                <Route exact path=\"/my-portfolio\" component={Top} />\n                <Route path=\"/my-portfolio/activities\" component={Activities} />\n                <Route path=\"/my-portfolio/profile\" component={Profile} />\n                <Route path=\"/my-portfolio/hobby\" component={Hobby} />\n              </Switch>\n\n            </div>\n          </Container>\n\n        </React.Fragment>\n      </Router>\n    );\n  }\n}\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}